import { NextRequest, NextResponse } from 'next/server';
import { getSession } from '@/lib/session';
import { supabaseAdmin } from '@/lib/supabaseClient';

export const maxDuration = 30;
export const dynamic = 'force-dynamic';

export async function GET(
  request: NextRequest,
  { params }: { params: { orderId: string } }
) {
  try {
    console.log(`üì∏ API: –ó–∞–ø—Ä–æ—Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –∑–∞–∫–∞–∑–∞: ${params.orderId}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Supabase
    if (!supabaseAdmin) {
      console.error('‚ùå API: SupabaseAdmin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return NextResponse.json({ photos: [] });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é
    let session;
    try {
      session = await getSession();
    } catch (sessionError) {
      console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', sessionError);
      return NextResponse.json({ photos: [] });
    }

    const { user } = session;

    if (!user || !session.isLoggedIn) {
      console.error('‚ùå API: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return NextResponse.json({ photos: [] });
    }

    console.log('‚úÖ API: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', { username: user.username, role: user.role });

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–∫–∞–∑–∞
    const { data, error } = await supabaseAdmin
      .from('orders')
      .select('photos')
      .eq('id', params.orderId)
      .single();

    if (error) {
      console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', error);
      return NextResponse.json({ photos: [] });
    }

    if (!data || !data.photos) {
      console.log('üì∏ API: –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –∑–∞–∫–∞–∑–∞:', params.orderId);
      return NextResponse.json({ photos: [] });
    }

    console.log(`‚úÖ API: –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã –¥–ª—è –∑–∞–∫–∞–∑–∞ ${params.orderId}: ${data.photos.length} —à—Ç.`);
    return NextResponse.json({ photos: data.photos });
    
  } catch (error: any) {
    console.error('‚ùå API: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    return NextResponse.json({ photos: [] });
  }
} 