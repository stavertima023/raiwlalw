import { NextRequest, NextResponse } from 'next/server';
import { supabaseAdmin } from '@/lib/supabaseClient';

export const dynamic = 'force-dynamic';

export async function GET(request: NextRequest) {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å SupabaseAdmin
    if (!supabaseAdmin) {
      console.error('‚ùå SupabaseAdmin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return NextResponse.json({ 
        error: 'SupabaseAdmin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        message: 'SUPABASE_SERVICE_ROLE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
      }, { status: 503 });
    }

    console.log('‚úÖ SupabaseAdmin –¥–æ—Å—Ç—É–ø–µ–Ω');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const { data, error } = await supabaseAdmin
      .from('orders')
      .select('id')
      .limit(1);

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
        details: error.message,
        code: error.code
      }, { status: 500 });
    }

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
    
    return NextResponse.json({ 
      success: true,
      message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç',
      data: data
    });

  } catch (error: any) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    return NextResponse.json({ 
      error: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞',
      message: error.message,
      stack: error.stack
    }, { status: 500 });
  }
} 