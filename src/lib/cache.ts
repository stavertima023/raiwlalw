import * as React from 'react';

/**
 * –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */

// –ö–ª—é—á–∏ –¥–ª—è localStorage
const CACHE_KEYS = {
  ORDERS: 'orders_cache',
  EXPENSES: 'expenses_cache',
  PAYOUTS: 'payouts_cache',
  DEBTS: 'debts_cache',
  USERS: 'users_cache',
  LAST_UPDATE: 'last_update',
  CACHE_VERSION: 'cache_version',
  MOBILE_OPTIMIZED: 'mobile_optimized',
} as const;

// –í–µ—Ä—Å–∏—è –∫—ç—à–∞ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
const CACHE_VERSION = '1.1.0';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
const isMobile = () => {
  if (typeof window === 'undefined') return false;
  return window.innerWidth < 768 || /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
};

// –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö) - —É–≤–µ–ª–∏—á–µ–Ω—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
const CACHE_TTL = {
  ORDERS: isMobile() ? 60 * 60 * 1000 : 30 * 60 * 1000, // 60 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 30 –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  EXPENSES: isMobile() ? 120 * 60 * 1000 : 60 * 60 * 1000, // 120 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 60 –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  PAYOUTS: isMobile() ? 60 * 60 * 1000 : 30 * 60 * 1000, // 60 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 30 –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  DEBTS: isMobile() ? 30 * 60 * 1000 : 15 * 60 * 1000, // 30 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 15 –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  USERS: isMobile() ? 240 * 60 * 1000 : 120 * 60 * 1000, // 240 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 120 –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
} as const;

interface CacheItem<T> {
  data: T;
  timestamp: number;
  version: string;
  mobileOptimized?: boolean;
}

interface CacheMetadata {
  lastUpdate: number;
  version: string;
  mobileOptimized?: boolean;
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—ç—à–µ–º —Å –º–æ–±–∏–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
 */
class CacheManager {
  public isAvailable: boolean;
  private isMobileDevice: boolean;

  constructor() {
    this.isAvailable = typeof window !== 'undefined' && 'localStorage' in window;
    this.isMobileDevice = isMobile();
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à —Å –º–æ–±–∏–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
   */
  set<T>(key: string, data: T, ttl: number = CACHE_TTL.ORDERS): void {
    if (!this.isAvailable) return;

    try {
      // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —É–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –ù–ï –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
      let optimizedData = data;
      if (this.isMobileDevice && Array.isArray(data) && key !== 'orders') {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–∫—Ä–æ–º–µ –∑–∞–∫–∞–∑–æ–≤)
        const maxItems = 100;
        optimizedData = (data as any[]).slice(0, maxItems) as T;
      }

      const cacheItem: CacheItem<T> = {
        data: optimizedData,
        timestamp: Date.now(),
        version: CACHE_VERSION,
        mobileOptimized: this.isMobileDevice,
      };

      const jsonData = JSON.stringify(cacheItem);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
      const dataSize = new Blob([jsonData]).size;
      
      // –†–∞–∑–Ω—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
      let maxSize = 5 * 1024 * 1024; // 5MB –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      
      if (key === 'payouts') {
        maxSize = 2 * 1024 * 1024; // 2MB –¥–ª—è payouts (—É–º–µ–Ω—å—à–µ–Ω–æ)
      } else if (key === 'orders') {
        maxSize = 10 * 1024 * 1024; // 10MB –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ (—É–≤–µ–ª–∏—á–µ–Ω–æ)
      }
      
      if (dataSize > maxSize) {
        console.warn(`‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ –¥–ª—è –∫—ç—à–∞ (${(dataSize / 1024 / 1024).toFixed(2)}MB): ${key}`);
        
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ, –æ—á–∏—â–∞–µ–º –∫—ç—à –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ
        this.clear();
        
        // –î–ª—è –∑–∞–∫–∞–∑–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50
        if (key === 'orders' && Array.isArray(data)) {
          const limitedData = (data as any[]).slice(0, 50);
          const limitedCacheItem: CacheItem<T> = {
            data: limitedData as T,
            timestamp: Date.now(),
            version: CACHE_VERSION,
            mobileOptimized: this.isMobileDevice,
          };
          localStorage.setItem(key, JSON.stringify(limitedCacheItem));
          console.log(`üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞–∫–∞–∑–æ–≤ –≤ –∫—ç—à`);
          return;
        }
        
        // –î–ª—è payouts —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20
        if (key === 'payouts' && Array.isArray(data)) {
          const limitedData = (data as any[]).slice(0, 20);
          const limitedCacheItem: CacheItem<T> = {
            data: limitedData as T,
            timestamp: Date.now(),
            version: CACHE_VERSION,
            mobileOptimized: this.isMobileDevice,
          };
          localStorage.setItem(key, JSON.stringify(limitedCacheItem));
          console.log(`üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –≤—ã–ø–ª–∞—Ç –≤ –∫—ç—à`);
          return;
        }
        
        // –î–ª—è –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        console.log(`‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ${key} –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞`);
        return;
      }

      localStorage.setItem(key, jsonData);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      this.updateMetadata();
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫—ç—à:', error);
      
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –∫–≤–æ—Ç—ã, –æ—á–∏—â–∞–µ–º –∫—ç—à
      if (error instanceof Error && error.name === 'QuotaExceededError') {
        console.log('üßπ –û—á–∏—â–∞–µ–º –∫—ç—à –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –∫–≤–æ—Ç—ã');
        this.clear();
        
        // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        try {
          if (key === 'orders' && Array.isArray(data)) {
            const limitedData = (data as any[]).slice(0, 20);
            const limitedCacheItem: CacheItem<T> = {
              data: limitedData as T,
              timestamp: Date.now(),
              version: CACHE_VERSION,
              mobileOptimized: this.isMobileDevice,
            };
            localStorage.setItem(key, JSON.stringify(limitedCacheItem));
            console.log(`üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞`);
          } else if (key === 'payouts' && Array.isArray(data)) {
            const limitedData = (data as any[]).slice(0, 10);
            const limitedCacheItem: CacheItem<T> = {
              data: limitedData as T,
              timestamp: Date.now(),
              version: CACHE_VERSION,
              mobileOptimized: this.isMobileDevice,
            };
            localStorage.setItem(key, JSON.stringify(limitedCacheItem));
            console.log(`üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –≤—ã–ø–ª–∞—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞`);
          }
        } catch (retryError) {
          console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–∂–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', retryError);
        }
      }
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –º–æ–±–∏–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
   */
  get<T>(key: string, ttl: number = CACHE_TTL.ORDERS): T | null {
    if (!this.isAvailable) return null;

    try {
      const cached = localStorage.getItem(key);
      if (!cached) return null;

      const cacheItem: CacheItem<T> = JSON.parse(cached);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∫—ç—à–∞
      if (cacheItem.version !== CACHE_VERSION) {
        this.remove(key);
        return null;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –º–æ–±–∏–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      if (cacheItem.mobileOptimized !== this.isMobileDevice) {
        this.remove(key);
        return null;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞
      const isExpired = Date.now() - cacheItem.timestamp > ttl;
      if (isExpired) {
        this.remove(key);
        return null;
      }

      return cacheItem.data;
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞:', error);
      this.remove(key);
      return null;
    }
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∫—ç—à–∞
   */
  remove(key: string): void {
    if (!this.isAvailable) return;

    try {
      localStorage.removeItem(key);
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞:', error);
    }
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤–µ—Å—å –∫—ç—à
   */
  clear(): void {
    if (!this.isAvailable) return;

    try {
      Object.values(CACHE_KEYS).forEach(key => {
        if (key !== CACHE_KEYS.LAST_UPDATE && key !== CACHE_KEYS.CACHE_VERSION) {
          localStorage.removeItem(key);
        }
      });
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞:', error);
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫—ç—à–∞
   */
  private updateMetadata(): void {
    if (!this.isAvailable) return;

    try {
      const metadata: CacheMetadata = {
        lastUpdate: Date.now(),
        version: CACHE_VERSION,
        mobileOptimized: this.isMobileDevice,
      };
      localStorage.setItem(CACHE_KEYS.LAST_UPDATE, JSON.stringify(metadata));
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö:', error);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫—ç—à
   */
  shouldUpdate(key: string, ttl: number = CACHE_TTL.ORDERS): boolean {
    if (!this.isAvailable) return true;

    try {
      const cached = localStorage.getItem(key);
      if (!cached) return true;

      const cacheItem: CacheItem<any> = JSON.parse(cached);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –∏ –º–æ–±–∏–ª—å–Ω—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
      if (cacheItem.version !== CACHE_VERSION || cacheItem.mobileOptimized !== this.isMobileDevice) {
        return true;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏
      return Date.now() - cacheItem.timestamp > ttl;
    } catch (error) {
      return true;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  getLastUpdate(): number {
    if (!this.isAvailable) return 0;

    try {
      const metadata = localStorage.getItem(CACHE_KEYS.LAST_UPDATE);
      if (!metadata) return 0;

      const parsed: CacheMetadata = JSON.parse(metadata);
      return parsed.lastUpdate || 0;
    } catch (error) {
      return 0;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –∏ –æ—á–∏—â–∞–µ—Ç –∫—ç—à –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
   */
  checkMemoryUsage(): boolean {
    if (!this.isAvailable) return true;

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä localStorage
      let totalSize = 0;
      const keys = Object.keys(localStorage);
      
      for (const key of keys) {
        const item = localStorage.getItem(key);
        if (item) {
          totalSize += new Blob([item]).size;
        }
      }

      const totalSizeMB = totalSize / (1024 * 1024);
      const maxSizeMB = 4; // 4MB –ª–∏–º–∏—Ç

      if (totalSizeMB > maxSizeMB) {
        console.warn(`‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç localStorage: ${totalSizeMB.toFixed(2)}MB > ${maxSizeMB}MB`);
        this.clear();
        return false;
      }

      return true;
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–º—è—Ç–∏:', error);
      this.clear();
      return false;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫—ç—à-–º–µ–Ω–µ–¥–∂–µ—Ä–∞
export const cacheManager = new CacheManager();

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π fetcher —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */
export const optimizedFetcher = async (url: string) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
  if (!cacheManager.checkMemoryUsage()) {
    console.log('üßπ –û—á–∏—â–∞–µ–º –∫—ç—à –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –ø–∞–º—è—Ç–∏');
    cacheManager.clear();
  }

  try {
    // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
    const controller = new AbortController();
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ (–æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
    const timeout = url.includes('/orders') ? 60000 : 15000; // 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤, 15 –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ
    const timeoutId = setTimeout(() => controller.abort(), timeout);

    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Cache-Control': 'max-age=300', // 5 –º–∏–Ω—É—Ç –∫—ç—à –Ω–∞ —É—Ä–æ–≤–Ω–µ –±—Ä–∞—É–∑–µ—Ä–∞
      },
      signal: controller.signal,
    });

    clearTimeout(timeoutId);

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à —Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const cacheKey = url.replace('/api/', '');
    
    // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º payouts –≤ –∫—ç—à –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    if (cacheKey !== 'payouts') {
      try {
        cacheManager.set(cacheKey, data);
        console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∫—ç—à: ${cacheKey}`);
      } catch (cacheError) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫—ç—à ${cacheKey}:`, cacheError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ –∫—ç—à –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
      }
    } else {
      console.log(`üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã (–±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è): ${cacheKey}`);
    }
    
    return data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${url}:`, error);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    const cacheKey = url.replace('/api/', '');
    const cachedData = cacheManager.get(cacheKey);
    
    if (cachedData) {
      console.log(`üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞: ${cacheKey}`);
      return cachedData;
    }
    
    throw error;
  }
};

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SWR –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
 */
export const swrConfig = {
  revalidateOnFocus: false, // –ù–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
  revalidateOnReconnect: false, // –ù–ï –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  dedupingInterval: isMobile() ? 300000 : 120000, // 5 –º–∏–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 2 –º–∏–Ω –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  errorRetryCount: isMobile() ? 0 : 1, // –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  errorRetryInterval: isMobile() ? 30000 : 10000, // 30—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 10—Å –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
  refreshInterval: 0, // –û–¢–ö–õ–Æ–ß–ê–ï–ú –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é
  refreshWhenHidden: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–≥–¥–∞ –≤–∫–ª–∞–¥–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
  refreshWhenOffline: false, // –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–≥–¥–∞ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
  revalidateIfStale: false, // –ù–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  revalidateOnMount: true, // –†–ê–ó–†–ï–®–ê–ï–ú –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  keepPreviousData: true, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
  onError: (error: Error) => {
    console.error('SWR Error:', error);
  },
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  shouldRetryOnError: false, // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
  focusThrottleInterval: 0, // –û—Ç–∫–ª—é—á–∞–µ–º throttle –¥–ª—è —Ñ–æ–∫—É—Å–∞
  loadingTimeout: isMobile() ? 60000 : 45000, // 60—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, 45—Å –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ (—É–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤)
  // –î–æ–±–∞–≤–ª—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏
  provider: () => new Map(),
  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞ –≤ –ø–∞–º—è—Ç–∏
  compare: (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b),
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  suspense: isMobile(), // –í–∫–ª—é—á–∞–µ–º suspense –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
  fallback: isMobile() ? {} : undefined, // Fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
 */
export const refreshCache = (key?: string) => {
  if (key) {
    cacheManager.remove(key);
  } else {
    cacheManager.clear();
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫—ç—à–∞
 */
export const getCacheStatus = () => {
  return {
    lastUpdate: cacheManager.getLastUpdate(),
    isAvailable: cacheManager.isAvailable,
    version: CACHE_VERSION,
    isMobile: isMobile(),
    memoryOk: cacheManager.checkMemoryUsage(),
  };
};

/**
 * –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
export const useCache = <T>(key: string, fetcher: () => Promise<T>, ttl?: number) => {
  const [data, setData] = React.useState<T | null>(null);
  const [loading, setLoading] = React.useState(true);
  const [error, setError] = React.useState<Error | null>(null);

  React.useEffect(() => {
    const loadData = async () => {
      try {
        setLoading(true);
        setError(null);

        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫—ç—à–∞
        const cached = cacheManager.get<T>(key, ttl);
        if (cached) {
          setData(cached);
          setLoading(false);
          return;
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
        const freshData = await fetcher();
        cacheManager.set(key, freshData, ttl);
        setData(freshData);
      } catch (err) {
        setError(err as Error);
      } finally {
        setLoading(false);
      }
    };

    loadData();
  }, [key, ttl, fetcher]);

  return { data, loading, error };
}; 